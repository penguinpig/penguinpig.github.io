[{"content":"Cygnus-x 4th(2016) history list time money items 2024-01-01 NT 100 碗公 CBR 500R 4th(2022) ","permalink":"https://penguinpig.github.io/bikes/mybike/","summary":"Cygnus-x 4th(2016) history list time money items 2024-01-01 NT 100 碗公 CBR 500R 4th(2022) ","title":"Mybike"},{"content":"今年也甚麼都沒有 ","permalink":"https://penguinpig.github.io/posts/2024-02-02/","summary":"今年也甚麼都沒有 ","title":"2024-02-02"},{"content":"環境設定 Solution_1 (WSL)\nWindow11 + WSL GUU\n確認安裝 WSL2 安裝版本(distribution):Ubuntu-20.04 Linux 安裝以下套件\nsudo apt-get install xrdp sudo apt-get install vnc4server sudo apt-get install ubuntu-desktop (optional) wsl basic command\nwsl --list --verbose #List all installed distribution verison wsl --shutdown 疑難排解\n如果無法安裝套件執行以下動作(X)\ncd /etc sudo touch wsl.conf sudo vim wsl.conf [network] generateResolvConf = false Reboot wsl wsl --shutdown wsl Edit resolv.conf cd /etc sudo touch resolv.conf sudo vim resolv.conf nameserver 8.8.8.8 Hyper-V\nHyper-V + Ubuntu LTS (22.04) 準備 ISO 檔(ubuntu-22.04.3) HyperV 預先建立硬碟256G(避免之後要再擴展) 網卡選擇Default switch 成功安裝Linux後，執行以下命令 apt-get install openssh-server #安裝 Secure Shell Server systemctl status ssh #檢查狀態 ip addr | grep eth0 #檢查IP位置 本機電腦上，執行以下命令遠端到電腦 ssh {userName}@{IP} 開啟加強工作階段(optional) 執行以下指令後重啟電腦，再執行一次 #!/bin/bash # # This script is for Ubuntu 18.04 Bionic Beaver to download and install XRDP+XORGXRDP via # source. # # Major thanks to: http://c-nergy.be/blog/?p=11336 for the tips. # ############################################################################### # Use HWE kernel packages # HWE=\u0026#34;\u0026#34; #HWE=\u0026#34;-hwe-18.04\u0026#34; ############################################################################### # Update our machine to the latest code if we need to. # if [ \u0026#34;$(id -u)\u0026#34; -ne 0 ]; then echo \u0026#39;This script must be run with root privileges\u0026#39; \u0026gt;\u0026amp;2 exit 1 fi apt update \u0026amp;\u0026amp; apt upgrade -y if [ -f /var/run/reboot-required ]; then echo \u0026#34;A reboot is required in order to proceed with the install.\u0026#34; \u0026gt;\u0026amp;2 echo \u0026#34;Please reboot and re-run this script to finish the install.\u0026#34; \u0026gt;\u0026amp;2 exit 1 fi ############################################################################### # XRDP # # Install hv_kvp utils apt install -y linux-tools-virtual${HWE} apt install -y linux-cloud-tools-virtual${HWE} # Install the xrdp service so we have the auto start behavior apt install -y xrdp systemctl stop xrdp systemctl stop xrdp-sesman # Configure the installed XRDP ini files. # use vsock transport. sed -i_orig -e \u0026#39;s/use_vsock=false/use_vsock=true/g\u0026#39; /etc/xrdp/xrdp.ini # use rdp security. sed -i_orig -e \u0026#39;s/security_layer=negotiate/security_layer=rdp/g\u0026#39; /etc/xrdp/xrdp.ini # remove encryption validation. sed -i_orig -e \u0026#39;s/crypt_level=high/crypt_level=none/g\u0026#39; /etc/xrdp/xrdp.ini # disable bitmap compression since its local its much faster sed -i_orig -e \u0026#39;s/bitmap_compression=true/bitmap_compression=false/g\u0026#39; /etc/xrdp/xrdp.ini # Add script to setup the ubuntu session properly if [ ! -e /etc/xrdp/startubuntu.sh ]; then cat \u0026gt;\u0026gt; /etc/xrdp/startubuntu.sh \u0026lt;\u0026lt; EOF #!/bin/sh export GNOME_SHELL_SESSION_MODE=ubuntu export XDG_CURRENT_DESKTOP=ubuntu:GNOME exec /etc/xrdp/startwm.sh EOF chmod a+x /etc/xrdp/startubuntu.sh fi # use the script to setup the ubuntu session sed -i_orig -e \u0026#39;s/startwm/startubuntu/g\u0026#39; /etc/xrdp/sesman.ini # rename the redirected drives to \u0026#39;shared-drives\u0026#39; sed -i -e \u0026#39;s/FuseMountName=thinclient_drives/FuseMountName=shared-drives/g\u0026#39; /etc/xrdp/sesman.ini # Changed the allowed_users sed -i_orig -e \u0026#39;s/allowed_users=console/allowed_users=anybody/g\u0026#39; /etc/X11/Xwrapper.config # Blacklist the vmw module if [ ! -e /etc/modprobe.d/blacklist_vmw_vsock_vmci_transport.conf ]; then cat \u0026gt;\u0026gt; /etc/modprobe.d/blacklist_vmw_vsock_vmci_transport.conf \u0026lt;\u0026lt;EOF blacklist vmw_vsock_vmci_transport EOF fi #Ensure hv_sock gets loaded if [ ! -e /etc/modules-load.d/hv_sock.conf ]; then echo \u0026#34;hv_sock\u0026#34; \u0026gt; /etc/modules-load.d/hv_sock.conf fi # Configure the policy xrdp session cat \u0026gt; /etc/polkit-1/localauthority/50-local.d/45-allow-colord.pkla \u0026lt;\u0026lt;EOF [Allow Colord all Users] Identity=unix-user:* Action=org.freedesktop.color-manager.create-device;org.freedesktop.color-manager.create-profile;org.freedesktop.color-manager.delete-device;org.freedesktop.color-manager.delete-profile;org.freedesktop.color-manager.modify-device;org.freedesktop.color-manager.modify-profile ResultAny=no ResultInactive=no ResultActive=yes EOF # reconfigure the service systemctl daemon-reload systemctl start xrdp # # End XRDP ############################################################################### echo \u0026#34;Install is complete.\u0026#34; echo \u0026#34;Reboot your machine to begin using XRDP.\u0026#34; 打開PowerShell 執行 powershell Set-VM -VMName \u0026quot;VMName\u0026quot; -EnhancedSessionTransportType HvSocket ssh connection timeout settings(optional) vim /etc/ssh/sshd_config (server config) 加入以下 ClientAliveInterval 30 #伺服器每隔(秒) 傳送訊息給客戶端，客戶端收到訊息會回傳以維持連線。 ClientAliveCountMax 20 #經過幾次客戶端沒回應，伺服器結束連線 重啟服務 systemctl restart ssh systemctl restart sshd ","permalink":"https://penguinpig.github.io/notes/environment/","summary":"environment settings.","title":"environment settings"},{"content":"Git 筆記 Setting ssh Generate ssh key(pulbic \u0026amp; private) ssh-keygen -t rsa -b 4096 -C \u0026#34;{email}\u0026#34; Press three times enter to use default value Check Result ls ~/.ssh -al cat ~/.ssh id_rsa cat ~/.ssh id_rsa.pub Copy public key cat ~/.ssh/id_rsa.pub Apply to GitHub setting Settings \u0026gt; SSH and GPG keys New SSH key Type a name，Add a ssh key Basic command git config --list #Check config list git config --global user.name \u0026#34;{name}\u0026#34; #Set name git config --global user.name \u0026#34;{email}\u0026#34; #Set email ","permalink":"https://penguinpig.github.io/notes/git/","summary":"Git Note.","title":"My Git Note"},{"content":"Basic command hugo new content -k {archetypes} {filename}.md # Create a article and specefic the file type hugo new content {filename}.md -c {path} # Create a file and specific file path ","permalink":"https://penguinpig.github.io/notes/hugo/","summary":"My Hugo Note.","title":"My Hugo Note"},{"content":"Linux Command 筆記 Linux basic keyboard shortcut Ctrl + Alt + T #Open Terminal Ctrl + Alt + D #Back to Desktop Terminal command df -h #Check disk usuage(easy to read) cat /etc/os-release #Check kernal, os version lsb_release -a #Check distribution version touch filename #If not exists,Create file vim filename #Edit file dpkg -i filename.deb #Install package sudo -i #Run as root tail -n +2 #print 2nd line to the end rsync -avh {sourcePath} {destination} #Sync sourcePath file to destPath echo -n \u0026#34;Stack exchange\u0026#34; | jq -sRr @uri # UrlEncode netstat -al #Check port used ufw allow 5001 #Change firewall rule watch -n 0.5 {script} #Watch terminal,Repeat script in 0.5s compgen -c #List all available command you can run ss #netstat Others firewall settings nc(netcat)\nufw(Uncomlicated Firewall)\nbasic command sudo ufw {enable/disable} #{啟用/關閉} 防火牆 sudo ufw status numbered #查看目前設定的規則 sudo ufw default allow #預設允許所有通訊埠 sudo ufw default deny #預設允許封鎖通訊埠 sudo ufw {allow/deny} number_port #{允許/封鎖}特定通訊埠 sudo ufw {allow/deny} port_num:port_num/{tcp/udp} ##{允許/封鎖}特定通訊埠一個區間 sudo ufw {allow/deny} from {ipAddress} #{允許/封鎖} {ipAddress} 的所有連線 sudo ufw {allow/deny} from {ipAddress}/{ipAddress_lastpart} #{允許/封鎖} 一個區間的IP 的所有連線 ","permalink":"https://penguinpig.github.io/notes/linux/","summary":"Linux Note.","title":"My Linux Note"},{"content":"Simple Script Check Microsoft license expire date #Check license ExpireDate Write-Host \u0026#34;Check Microsoft Office license ExpireDate(Wait for alert)\u0026#34; $Resp = cscript \u0026#34;C:\\Program Files\\Microsoft Office\\Office16\\OSPP.VBS\u0026#34; /dstatus $officeKey = $Resp[6].Substring(8) slmgr /xpr $officeKey ","permalink":"https://penguinpig.github.io/posts/2024-01-31/","summary":"Simple Script","title":"2024-01-31"},{"content":"","permalink":"https://penguinpig.github.io/bikes/","summary":"archives","title":"Bikes"},{"content":"","permalink":"https://penguinpig.github.io/notes/","summary":"archives","title":"Notes"}]